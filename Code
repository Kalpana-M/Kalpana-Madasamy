#include <SoftwareSerial.h>  //allows serial communication on other digital pins of the Arduino
constint SWIT = 6;
constintbuz = 8;
SoftwareSerialsim(11, 12);   // RX digital pin 11, TX digital pin 12; SYNTAX : SoftwareSerialmySerial (Rx, Tx);
int _timeout;
String _buffer;
String number = "+918610400742";   //mobile number to which the sms has to be sent

void setup() {
pinMode(SWIT,INPUT);
pinMode(buz,OUTPUT);
digitalWrite(buz,HIGH);    //initially make buzzer high because buzzer starts ringing if it is in low mode
digitalWrite(SWIT,HIGH);
delay(5000); //delay for 5 seconds to make sure the modules get the signal
Serial.begin(9600);  // Setting the baud rate of Serial Monitor (Arduino)
 //reserve() function allows you to allocate a buffer in memory for manipulating Strings.
 _buffer.reserve(50);  //myString.reserve(size);   size: the number of bytes in memory to save for String manipulation
Serial.println("System Started...");
sim.begin(9600);    //Baud rate of the GSM Module
delay(1000);
}

void loop() {
if(digitalRead(SWIT)==LOW)  //when the switch is pressed it goes to low state
 { 
while(digitalRead(SWIT)==LOW); 
delay(1000);
digitalWrite(buz,LOW);  //buzzer starts ringing
SendMessage();
digitalWrite(buz,HIGH);   //buzzer stops ringing after sending the message
 } 
if(digitalRead(SWIT)==HIGH)
digitalWrite(buz,HIGH);
}                

voidSendMessage()
{
Serial.println ("Sending Message");
sim.println("AT+CMGF=1");       //Sets the GSM Module in Text Mode 
   //sim.println writes data to software serial port (Tx pin of our Software Serial â€“ that is pin 12) and this will be captured by GSM module (through its Rx pin)
delay(1000);     // Delay of 1000 milli seconds or 1 second
  //Serial.println ("Set SMS Number");
  //AT+CMGS=\"+YYxxxxxxxxxx\"\r // Input the mobile number| YY is country code
sim.println("AT+CMGS=\"" + number + "\"\r");        //Mobile phone number to send message
delay(1000);       //Each and every AT command may be followed by 1 second delay. We must give some time for GSM module to respond properly.
  String SMS = "Help me, I am in trouble...";
sim.println(SMS);      // The SMS text you want to send
delay(100);
  //The end of SMS content is identified with CTRL+Z symbol.
sim.println((char)26);    // ASCII code of CTRL+Z
delay(1000);
_buffer = _readSerial();  // _readSerial() to read the answer from SIM800L
  // digitalWrite(buz,HIGH); 
}

String _readSerial() 
{
  _timeout = 0;
    //sim.available() checks for any data coming from GSM module through the SoftwareSerial pins 11 and 12
while  (!sim.available() && _timeout < 12000  )   //checked for every 12 seconds
{
 delay(13);
 _timeout++;
  }
if (sim.available())
 {
returnsim.readString();   //returns the data if available in GSM
  }
}
